apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    type: cluster-infra
  namespace: argocd
  name: service-logging-grafana
spec:
  destination:
    name: 'in-cluster'
    namespace: observability
  source:
    repoURL: 'https://grafana.github.io/helm-charts'
    targetRevision: 6.45.0
    chart: grafana
    helm:
      releaseName: service-logging-grafana
      valueFiles:
        - values.yaml
      values: |-
        datasources: 
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Loki
              type: loki
              isDefault: true
              uid: loki
              url: http://loki-gateway.observability.svc.cluster.local
              access: proxy
              orgId: 1
              editable: false
              jsonData:
                timeInterval: 5s
            - name: Tempo
              type: tempo
              isDefault: false
              uid: tempo
              url: http://tempo-query-frontend.observability.svc.cluster.local:3100
              access: proxy
              orgId: 1
              editable: false
              basicAuth: false
              version: 1
              apiVersion: 1
              jsonData:
                httpMethod: GET
                tracesToLogs:
                  datasourceUid: 'loki'
                  tags: ['job', 'instance', 'pod', 'namespace']
                  mappedTags: [{ key: 'service.name', value: 'service' }]
                  mapTagNamesEnabled: false
                  spanStartTimeShift: '1h'
                  spanEndTimeShift: '1h'
                  filterByTraceID: false
                  filterBySpanID: false
                tracesToMetrics:
                  datasourceUid: 'prometheus'
                  tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
                  queries:
                    - name: 'Sample query'
                      query: 'sum(rate(tempo_spanmetrics_latency_bucket{$__tags}[5m]))'
                serviceMap:
                  datasourceUid: 'prometheus'
                search:
                  hide: false
                nodeGraph:
                  enabled: true
                lokiSearch:
                  datasourceUid: 'loki'
            - access: proxy
              editable: false
              isDefault: false
              uid: prometheus
              jsonData:
                httpMethod: GET
              name: Prometheus
              orgId: 1
              type: prometheus
              url: http://prometheus-server.observability.svc.cluster.local:9090
              #url: http://rancher-monitoring-prometheus.cattle-monitoring-system.svc.cluster.local:9090
      parameters:
        - name: env.GF_AUTH_ANONYMOUS_ENABLED
          value: 'true'
        - name: env.GF_AUTH_ANONYMOUS_ORG_ROLE
          value: 'Admin'
        - name: env.GF_AUTH_DISABLE_LOGIN_FORM
          value: 'true'
        - name: env.GF_FEATURE_TOGGLES_ENABLE
          value: 'tempoSearch tempoBackendSearch tempoApmTable'
  project: default
  syncPolicy:
    syncOptions:
      - PruneLast=true
      - RespectIgnoreDifferences=true
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
  revisionHistoryLimit: 3